import CreateHTMLElement from"../../CreateHTMLElement.js";import Lisener from"../../../Lisener/Lisener.js";class Select extends CreateHTMLElement{constructor({className:e,id:t,name:s="",additionalDataForForm:{therapist:a,cardiologist:r,dentist:i}="",content:n}){super(e,t),this.name=s,this.content=n,this.therapist=a,this.cardiologist=r,this.dentist=i,this.arrClassName=null}render(e,t){this.createSelect(),this.addElement(e,t),this.lisenerSelect()}createSelect(){this.createElement({name:"select",attributes:{name:this.name,innerHTML:this.content}})}saveData(e){return e.map((e=>{const{className:t}=e;return t[1]}))}removeLabelWithForm(e){e.forEach((e=>{document.querySelector(`.${e}`).remove()}))}renderInputLabel(e,t){const{labels:s,inputs:a}=t[e.value];s.forEach((e=>e.render(".form-label-doctor","afterend"))),a.forEach(((e,t)=>e.render(`.${s[t].className[1]}`,"beforeend"))),this.arrClassName=this.saveData(s)}getValueSelect(e){if("doctor"===e.name){const t={"Кардиолог":this.cardiologist,"Стоматолог":this.dentist,"Терапевт":this.therapist};this.arrClassName&&this.removeLabelWithForm(this.arrClassName),this.renderInputLabel(e,t)}}lisenerSelect(){this.arrClassName=null;const e=document.querySelector(`.${this.className[2]}`);this.getValueSelect(e),Lisener.render(`.${this.className[2]}`,"change",this.getValueSelect.bind(this))}}export default Select;